// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function lit(n) {
  return /* record */[/* eval */n];
}

function add(x, y) {
  return /* record */[/* eval */x[/* eval */0] + y[/* eval */0] | 0];
}

var ExpEval = /* module */[
  /* lit */lit,
  /* add */add
];

function lit$1(n) {
  return /* record */[/* view */String(n)];
}

function add$1(x, y) {
  var s = "(" + (x[/* view */0] + (" + " + (y[/* view */0] + ")")));
  return /* record */[/* view */s];
}

var ExpView = /* module */[
  /* lit */lit$1,
  /* add */add$1
];

function mul(x, y) {
  return /* record */[/* eval */Caml_int32.imul(x[/* eval */0], y[/* eval */0])];
}

var MulEval = /* module */[
  /* lit */lit,
  /* add */add,
  /* mul */mul
];

function mul$1(x, y) {
  var s = "(" + (x[/* view */0] + (" * " + (y[/* view */0] + ")")));
  return /* record */[/* view */s];
}

var MulView = /* module */[
  /* lit */lit$1,
  /* add */add$1,
  /* mul */mul$1
];

function expr(M) {
  return Curry._2(M[/* add */1], Curry._2(M[/* add */1], Curry._1(M[/* lit */0], 10), Curry._1(M[/* lit */0], 12)), Curry._1(M[/* lit */0], 40));
}

var v1 = expr(ExpEval);

var s1 = expr(ExpView);

function expr2(M) {
  return Curry._2(M[/* mul */2], Curry._2(M[/* add */1], Curry._1(M[/* lit */0], 10), Curry._1(M[/* lit */0], 12)), Curry._1(M[/* lit */0], 40));
}

var v2 = expr2(MulEval);

var s2 = expr2(MulView);

exports.ExpEval = ExpEval;
exports.ExpView = ExpView;
exports.MulEval = MulEval;
exports.MulView = MulView;
exports.expr = expr;
exports.v1 = v1;
exports.s1 = s1;
exports.expr2 = expr2;
exports.v2 = v2;
exports.s2 = s2;
/* v1 Not a pure module */
